plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
}

description = 'Spring Pulsar Sample (Imperative Produce and Consume)'

repositories { 
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext['spring-pulsar.version'] = '${project.version}'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-pulsar'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.zipkin.reporter2:zipkin-sender-urlconnection'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	testImplementation project(':spring-pulsar-test')
	testRuntimeOnly 'ch.qos.logback:logback-classic'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.awaitility:awaitility'
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.boot:spring-boot-testcontainers"
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:pulsar'
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
	outputs.upToDateWhen { false }
}

bootRun {
	jvmArgs = [
			"--add-opens", "java.base/java.lang=ALL-UNNAMED",
			"--add-opens", "java.base/java.util=ALL-UNNAMED",
			"--add-opens", "java.base/sun.net=ALL-UNNAMED"
	]
}
