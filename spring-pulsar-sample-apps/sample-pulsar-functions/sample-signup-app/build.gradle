plugins {
	id 'java'
	alias(libs.plugins.spring.boot)
	alias(libs.plugins.spring.dep.mgmt)
}

group = 'org.springframework.pulsar.sample'
description = 'Sample Signup App (Pulsar Functions)'

repositories { 
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

def versionCatalog = extensions.getByType(VersionCatalogsExtension).named("libs")
def springCloudStreamVersion = versionCatalog.findVersion("spring-cloud-stream").orElseThrow().displayName
def pulsarVersion = versionCatalog.findVersion("pulsar").orElseThrow().displayName

ext['spring-pulsar.version'] = "${project.property('version.samples')}"
ext['pulsar.version'] = "${pulsarVersion}"

dependencies {
	implementation "org.springframework.cloud:spring-cloud-stream-binder-pulsar:${springCloudStreamVersion}"
	implementation "org.springframework.boot:spring-boot-starter-pulsar"
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.zipkin.reporter2:zipkin-sender-urlconnection'
	implementation 'com.devskiller:jfairy:0.6.5'
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
	outputs.upToDateWhen { false }
}

bootRun {
	jvmArgs = [
			"--add-opens", "java.base/java.lang=ALL-UNNAMED",
			"--add-opens", "java.base/java.util=ALL-UNNAMED",
			"--add-opens", "java.base/sun.net=ALL-UNNAMED"
	]
}
