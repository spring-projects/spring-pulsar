plugins {
	id "java-gradle-plugin"
	id 'groovy-gradle-plugin'
	id "java"
	id "groovy"
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

def versionCatalog = extensions.getByType(VersionCatalogsExtension).named("buildLibs")
def springVersion = versionCatalog.findVersion("spring").orElseThrow().displayName
if (springVersion.contains("-")) {
	repositories {
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://repo.spring.io/snapshot" }
	}
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

sourceSets {
	main {
		java { srcDirs = [] }
		groovy { srcDirs += ['src/main/java'] }
	}
}

configurations {
	implementation {
		exclude module: 'groovy-all'
	}
}

dependencies {
	implementation localGroovy()
	implementation buildLibs.asciidoc.gradle.jvm
	implementation buildLibs.commons.codec
	implementation buildLibs.groovy.all
	implementation buildLibs.jfrog.build.extractor.gradle
	implementation buildLibs.jackson.databind
	implementation buildLibs.javaformat.gradle
	implementation buildLibs.maven.embedder
	implementation buildLibs.nexus.publish
	implementation buildLibs.nohttp.gradle
	implementation buildLibs.sonarqube.gradle
	implementation(platform(buildLibs.spring.bom))
	implementation buildLibs.spring.core
	implementation buildLibs.spring.web
	implementation buildLibs.test.retry.gradle
}

gradlePlugin {
	plugins {
		artifactoryPlugin {
			id = "io.spring.convention.artfiactory"
			implementationClass = "io.spring.gradle.convention.ArtifactoryPlugin"
		}
		jacocoConventionsPlugin {
			id = "org.springframework.pulsar.jacoco"
			implementationClass = "org.springframework.pulsar.gradle.check.JacocoConventionsPlugin"
		}
		optionalDependenciesPlugin {
			id = "org.springframework.pulsar.optional-dependencies"
			implementationClass = "org.springframework.pulsar.gradle.optional.OptionalDependenciesPlugin"
		}
		repositoryConventionPlugin {
			id = "io.spring.convention.repository"
			implementationClass = "io.spring.gradle.convention.RepositoryConventionPlugin"
		}
		rootProjectPlugin {
			id = "org.springframework.pulsar.root-project"
			implementationClass = "org.springframework.pulsar.gradle.RootProjectPlugin"
		}
		springDocsModulePlugin {
			id = "org.springframework.pulsar.spring-docs-module"
			implementationClass = "org.springframework.pulsar.gradle.SpringDocsModulePlugin"
		}
		springModulePlugin {
			id = "org.springframework.pulsar.spring-module"
			implementationClass = "org.springframework.pulsar.gradle.SpringModulePlugin"
		}
		springUnpublishedModulePlugin {
			id = "org.springframework.pulsar.spring-unpublished-module"
			implementationClass = "org.springframework.pulsar.gradle.SpringUnpublishedModulePlugin"
		}
		sonarQubeConventionsPlugin {
			id = "org.springframework.pulsar.sonarqube"
			implementationClass = "org.springframework.pulsar.gradle.check.SonarQubeConventionsPlugin"
		}
		updateProjectVersion {
			id = "org.springframework.pulsar.update-version"
			implementationClass = "org.springframework.pulsar.gradle.versions.UpdateProjectVersionPlugin"
		}
	}
}
