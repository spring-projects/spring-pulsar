plugins {
	id 'org.springframework.pulsar.spring-module'
	alias(libs.plugins.shadow)
}

description = 'Spring Pulsar Caffeine Cache Provider'

dependencies {
	api project (':spring-pulsar-cache-provider')
	implementation libs.caffeine
	shadow project(':spring-pulsar-cache-provider')
}

jar {
	archiveClassifier.set('original')
}

tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
	archiveClassifier = ''
	from("${rootProject.projectDir}/src/dist") {
		include 'notice.txt'
		into 'META-INF'
		expand(version: project.version)
	}
	from("${rootProject.projectDir}") {
		include 'LICENSE.txt'
		into 'META-INF'
	}
	relocate 'com.github.benmanes.caffeine', 'org.springframework.pulsar.shade.com.github.benmanes.caffeine'
	relocate 'com.google', 'org.springframework.pulsar.shade.com.google'
	dependencies {
		exclude {
			!['com.github.ben-manes.caffeine', 'com.google.errorprone'].contains(it.moduleGroup)
		}
	}
}

// disable module metadata - otherwise original jar will be used when published
tasks.withType(GenerateModuleMetadata) {
	enabled = false
}

shadow {
	addShadowVariantIntoJavaComponent = false
}

publishing {
	publications {
		mavenJava {
			artifact(shadowJar)
			pom.withXml {
				Node pomNode = asNode()
				pomNode.dependencies.'*'.findAll() {
					it.artifactId.text() == 'caffeine'
				}.each() {
					it.parent().remove(it)
				}
			}
		}
	}
}
