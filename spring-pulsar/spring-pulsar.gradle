plugins {
	id 'org.springframework.pulsar.spring-module'
}

description = 'Spring Pulsar Core'

dependencies {
	api 'io.micrometer:micrometer-observation'
	api (libs.pulsar.client.all) {
		exclude group: 'org.apache.logging.log4j'
		exclude group: 'com.sun.activation', module: 'javax.activation'
		exclude group: 'javax.validation', module: 'validation-api'
	}
	api 'org.springframework:spring-context'
	api 'org.springframework:spring-messaging'
	api 'org.springframework:spring-tx'
	api (libs.spring.retry) {
		exclude group: 'org.springframework'
	}
	api project(':spring-pulsar-cache-provider')
	implementation project(path: ':spring-pulsar-cache-provider-caffeine', configuration: 'shadow')
	implementation 'com.fasterxml.jackson.core:jackson-core'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation libs.jsr305
	optional libs.protobuf.java
	optional libs.json.path
	optional 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
	optional 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	optional 'com.fasterxml.jackson.datatype:jackson-datatype-joda'

	testImplementation project(':spring-pulsar-test')
	testImplementation 'io.micrometer:micrometer-observation-test'
	testImplementation 'io.micrometer:micrometer-tracing-bridge-brave'
	testImplementation 'io.micrometer:micrometer-tracing-test'
	testImplementation 'io.micrometer:micrometer-tracing-integration-test'
	testImplementation 'org.assertj:assertj-core'
	testImplementation 'org.awaitility:awaitility'
	testImplementation 'org.hamcrest:hamcrest'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testImplementation 'org.springframework:spring-test'
	// Output capture used by PulsarFunctionAdministrationTests
	testImplementation libs.system.lambda
	testRuntimeOnly libs.logback.classic
}
