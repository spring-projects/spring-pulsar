import io.spring.javaformat.gradle.tasks.CheckFormat

plugins {
	id 'org.springframework.pulsar.spring-module'
	alias(libs.plugins.protobuf)
}

description = 'Spring Pulsar Reactive Support'

tasks.named('extractIncludeProto') { enabled = false }
tasks.named('extractIncludeTestProto') { enabled = false }

tasks.withType(CheckFormat).configureEach { task ->
	task.source = project.files(
			task.source.filter { file ->
				!file.path.contains('build/generated/source/proto')
				task.enabled = false
			}
	)
}

protobuf {
	protoc {
		artifact = libs.protobuf.protoc.get()
	}
}

dependencies {
	api project (':spring-pulsar')
	api (libs.pulsar.client.reactive.api) {
		// spring-pulsar includes a pulsar-client-api with its unwanted transitive deps excluded
		exclude group: "org.apache.pulsar", module: "pulsar-client-api"
	}
	api (libs.pulsar.client.reactive.adapter) {
		// spring-pulsar includes a pulsar-client with its unwanted transitive deps excluded
		exclude group: "org.apache.pulsar", module: "pulsar-client"
		// (above) we include a pulsar-client-reactive-api whose pulsar-client-api with
		// unwanted transitive deps excluded
		exclude group: "org.apache.pulsar", module: "pulsar-client-reactive-api"
	}
	api(libs.pulsar.client.reactive.producer.cache.caffeine.shaded) {
		// (above) we include a pulsar-client-reactive-adapter whose pulsar-client with
		// unwanted transitive deps excluded
		exclude group: "org.apache.pulsar", module: "pulsar-client-reactive-adapter"
	}
	implementation 'com.fasterxml.jackson.core:jackson-core'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation libs.jsr305
	optional 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
	optional 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	optional 'com.fasterxml.jackson.datatype:jackson-datatype-joda'
	optional 'io.projectreactor:reactor-core'
	optional libs.protobuf.java
	optional libs.json.path

	testImplementation project(':spring-pulsar-test')
	testImplementation(testFixtures(project(":spring-pulsar")))
	testRuntimeOnly libs.logback.classic
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.assertj:assertj-core'
	testImplementation 'org.awaitility:awaitility'
	testImplementation 'org.hamcrest:hamcrest'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testImplementation 'org.springframework:spring-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:pulsar'
}
